extend type Query {
  userList(
    orderBy: OrderBy
    params: UserParams
    page: Page
  ): UserList
}

extend type Mutation {
  createUsers(
    body: [UpdateUser!]!
    orderBy: OrderBy
    params: UserParams
    page: Page
  ): UserList

  removeUsers (
    conds: UserParams! 
    orderBy: OrderBy
    params: UserParams
    page: Page
  ): UserList

  updateUsers (
    conds: UserParams!
    body: UpdateUser!
    orderBy: OrderBy
    params: UserParams
    page: Page
  ): UserList
}

type UserList {
  list: [User]
  stats: Stats
  change: [User]
  rescode: Int
  message: String
  page: Page
}

type User implements QueryList {
  id: ID
  name: String
  account: String
  role: Role
  sex: Int

  status: Int
  creator: User
  updater: User
  updateTime: Date
  creationTime: Date
}

input UserParams {
  id: ID
  ids: [ID!]
  name: String
  account: String
  role: ID
  sex: Int

  status: [Int]
  creator: ID
  updater: ID
  startUpdateTime: Date
  endUpdateTime: Date
  startCreationTime: Date
  endCreationTime: Date
}

input UpdateUser {
  name: String
  account: String
  password: String
  role: ID
  sex: Int
  status: Int
}
