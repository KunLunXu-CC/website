extend type Query{
  tagList(
    orderBy: TagOrderBy, 
    params: TagParams, 
    page: PageInput
  ): TagList
}

extend type Mutation{
  removeTags (
    conds: TagParams!, 
    orderBy: TagOrderBy, 
    params: TagParams, 
    page: PageInput
  ): TagList
  createTags (
    body: [UpdateTag!]!, 
    orderBy: TagOrderBy, 
    params: TagParams, 
    page: PageInput
  ): TagList
  updateTags (
    conds: TagParams!, 
    body: UpdateTag!, 
    orderBy: TagOrderBy, 
    params: TagParams,
    page: PageInput
  ): TagList
}

input UpdateTag {
  name: String!
  parent: ID
  color: String
  icon: String
}

input TagOrderBy {
  updateTime: Int
  creationTime: Int
}

input TagParams {
  id: ID
  ids: [ID!]
  parent: ID
  creator: ID
  updater: ID
  name: String
  color: String
  icon: String
  startUpdateTime: Date
  endUpdateTime: Date
  startCreationTime: Date
  endCreationTime: Date
  status: [Int]
}

type TagList{
  list: [Tag]
  stats: Stats
  change: [Tag]
  rescode: Int
  message: String
  page: PageOutput
}

type Tag {
  id: ID
  parent: Tag
  creator: ID
  updater: ID
  name: String
  color: String
  icon: String
  updateTime: Date
  creationTime: Date
  status: Int
}
