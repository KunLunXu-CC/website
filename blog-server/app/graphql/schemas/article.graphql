extend type Query {
  aticleList(
    orderBy: OrderBy
    params: ArticleParams
    page: Page
  ): ArticleList
}
extend type Mutation {
  createArticles(
    body: [UpdateAticle!]!
    orderBy: OrderBy
    params: ArticleParams
    page: Page
  ): ArticleList

  removeArticles (
    conds: ArticleParams! 
    orderBy: OrderBy
    params: ArticleParams
    page: Page
  ): ArticleList

  updateArticles (
    conds: ArticleParams!
    body: UpdateAticle!
    orderBy: OrderBy
    params: ArticleParams
    page: Page
  ): ArticleList
}

input ArticleParams {
  id: ID
  ids: [ID!]
  tag: ID
  creator: ID
  updater: ID
  name: String
  desc: String
  thumb: String
  content: String
  startUpdateTime: Date
  endUpdateTime: Date
  startCreationTime: Date
  endCreationTime: Date
  status: [Int]
}

input UpdateAticle{
  name: String!
  desc: String
  thumb: String
  tags: [ID!]
  content: String
	status: Int
}

type ArticleList{
  list: [Article]
  stats: Stats
  change: [Article]
  rescode: Int
  message: String
  page: Page
}

type Article implements QueryList {
  desc: String
  thumb: String
  tags: [Tag!]
  content: String

  id: ID
  name: String!
	status: Int
  creator: User
  updater: User
  updateTime: Date
  creationTime: Date
}
