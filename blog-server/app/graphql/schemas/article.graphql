extend type Query {
  aticleList(
    orderBy: ArticleOrderBy, 
    params: ArticleParams, 
    page: PageInput
  ): ArticleList
}
extend type Mutation {
  createArticles(
    body: [UpdateAticle!]!, 
    orderBy: ArticleOrderBy, 
    params: ArticleParams, 
    page: PageInput
  ): ArticleList,
  removeArticles (
    conds: ArticleParams!, 
    orderBy: ArticleOrderBy, 
    params: ArticleParams, 
    page: PageInput
  ): ArticleList
  updateArticles (
    conds: ArticleParams!, 
    body: UpdateAticle!, 
    orderBy: ArticleOrderBy, 
    params: ArticleParams,
    page: PageInput
  ): ArticleList
}

input ArticleParams {
  id: ID
  ids: [ID!]
  tag: ID,
  creator: ID
  updater: ID
  name: String
  desc: String
  thumb: String
  content: String
  startUpdateTime: Date
  endUpdateTime: Date
  startCreationTime: Date
  endCreationTime: Date
  status: [Int]
}

input UpdateAticle{
  name: String!
  desc: String
  thumb: String
  tags: [ID!]
  content: String
	status: Int
}

input ArticleOrderBy {
  updateTime: Int
  creationTime: Int
}

type ArticleList{
  list: [Article]
  stats: Stats
  change: [Article]
  rescode: Int
  message: String
  page: PageOutput
}

type Article{
  name: String!
  desc: String
  thumb: String
  tags: [Tag!]
  content: String
	status: Int
  creator: ID
  updater: ID
  updateTime: Date
  creationTime: Date
}
