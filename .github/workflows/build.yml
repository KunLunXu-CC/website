# 1. 为工作流定义名字
name: build & deploy

# 2. 触发条件修改为：当 master 分支，有 push 的时候，执行任务
on:
  push:
    branches:
      - master

# 3. 创建工作流
jobs:
  build:
    name: Create Release      # 工作流名称
    runs-on: ubuntu-latest    # 依赖环境

    steps:                    # 工作流步骤
      # step1. 获取源码
      - name: chekcout
        uses: actions/checkout@master

      # step2. 安装依赖并打包
      - name: Install and Build
        run: |
          npm install
          npm run build
          tar -zcvf release.tar.gz ./build/*
          ls -a

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        run: |
          ls -a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # step4. 发布
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.tar.gz
          asset_name: release.tar.gz
          asset_content_type: application/x-tgz
